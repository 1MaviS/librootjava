apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    defaultConfig {
        minSdkVersion 21 /* was 14 pre-Binder/AIDL */
        targetSdkVersion 26
        consumerProguardFiles 'proguard.txt'
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

ext {
    libraryName = 'libRootJava'
    libraryDescription = 'Run Java (and Kotlin) code as root!'

    publishedGroupId = 'eu.chainfire'
    artifact = 'librootjava'

    siteUrl = 'https://github.com/Chainfire/librootjava'
    gitUrl = 'https://github.com/Chainfire/librootjava.git'
    issueTrackerUrl = 'https://github.com/Chainfire/librootjava/issues'

    libraryVersion = '1.3.3'

    developerId = 'Chainfire'
    developerName = 'Jorrit Jongma'
    developerEmail = 'chainfire@chainfire.eu'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

task installMavenLocal(type: Upload) {
    repositories.mavenInstaller {
        configuration = configurations['archives']
        pom.project {
            packaging 'aar'
            groupId = publishedGroupId
            artifactId = artifact
            version = libraryVersion + '-SNAPSHOT'
        }
    }
}

version = libraryVersion
group = publishedGroupId

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId = publishedGroupId
            artifactId = artifact
            name libraryName
            version = libraryVersion
            url siteUrl
            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url gitUrl
            }
        }
    }
}
